## Class for creating jffs2 images.
##
## Creates a jffs2 image. The options for creating the jffs2 image is found in
## JFFS2_IMAGE_OPTIONS.
##
## @useflag jffs2_maxsize The maximum size allowed of the jffs2 image. Used by
##          the sizecheck class.
##
## @var IMAGE_BASENAME Basename of the image created.
## @var JFFS2_IMAGE_OPTIONS The options used when creating the jffs2 image.
##      Set to lzo compression, and disables zlib and rtime by default.

IMAGE_BASENAME ?= "${MACHINE_ID}-${PN}"

inherit image

JFFS2_IMAGE_DEPENDS = "native:util/mkfs-jffs2"
CLASS_DEPENDS += "${JFFS2_IMAGE_DEPENDS}"

CLASS_FLAGS += "jffs2_maxsize"

IMAGE_CREATE_FUNCS += "jffs2_image"

# Use lzo compression with fallback to none if low compression achieved
JFFS2_IMAGE_OPTIONS ?= "--enable-compressor=lzo --disable-compressor=zlib --disable-compressor=rtime"

jffs2_image () {
	mkfs.jffs2 ${JFFS2_IMAGE_OPTIONS} \
		--root=${IMAGE_DIR} \
		--output=${B}/${IMAGE_BASENAME}.jffs2
}

# Support checking the jffs2 image size
inherit sizecheck
JFFS2_SIZECHECK = ""
JFFS2_SIZECHECK:USE_jffs2_maxsize = "${B}/${IMAGE_BASENAME}.jffs2:${USE_jffs2_maxsize}"
SIZECHECK += "${JFFS2_SIZECHECK}"

do_install[postfuncs] += "do_install_jffs2_image"
do_install_jffs2_image () {
	install -m 664 ${B}/${IMAGE_BASENAME}.jffs2 ${D}/
}

FILES_${PN} += "/*.jffs2"

do_deploy[postfuncs] += "do_deploy_jffs2_image"
do_deploy_jffs2_image () {
	install -m 664 ${B}/${IMAGE_BASENAME}.jffs2 \
		${IMAGE_DEPLOY_DIR}/${IMAGE_FULLNAME}.jffs2
	ln -sf ${IMAGE_FULLNAME}.jffs2 \
		${IMAGE_DEPLOY_DIR}/${IMAGE_BASENAME}.jffs2
}

# Local Variables:
# mode: python
# End:
