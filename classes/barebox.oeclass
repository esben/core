## Class for building barebox.
##
## If having a barebox bootloader, simply inherit this class and set the
## SRC_URI, and ensure that the correct defconfig is used.
## Barebox defconfig can be provided in 3 different ways:
## Use defconfig file from DEPENDS (barebox-defconfig)
##  + USE_barebox_defconfig not set (this is default)
## Use defconfig from barebox source.
##  + Set USE_barebox_defconfig to "blahblah_defconfig"
## Use defconfig file from SRC_URI
##  + Set USE_barebox_defconfig to "file"
##
## @useflag barebox_defconfig Set to the defconfig used.
## @useflag barebox_maxsize Set to the maximum size allowed. See the
##          sizecheck class.

DESCRIPTION ?= "Barebox - a bootloader that inherits the best of U-Boot and the Linux kernel"
HOMEPAGE ?= "http://www.barebox.org/"
LICENSE ?= "GPL"

RECIPE_TYPES = "machine"

require conf/barebox.conf

inherit c make kernel-arch

EXTRA_OEMAKE = "ARCH=${KERNEL_ARCH} CROSS_COMPILE=${TARGET_PREFIX}"

CFLAGS[unexport]   = "1"
CPPFLAGS[unexport] = "1"
LDFLAGS[unexport]  = "1"

CLASS_FLAGS += "${DEFCONFIG_FLAG}"
DEFCONFIG[expand] = "3"
CLASS_DEPENDS += "${DEPENDS_DEFCONFIG}"
DEPENDS_DEFCONFIG = "barebox-defconfig"

addhook barebox_depends_defconfig to post_recipe_parse after set_useflags
def barebox_depends_defconfig(d):
    flag = "USE_" + d.get("DEFCONFIG_FLAG")
    if not "DEFCONFIG" in d:
        d.set("DEFCONFIG", "${%s}"%(flag))
    d.set_override("DEPENDS_DEFCONFIG", ("", flag), "")

do_configure() {
	if [ "${DEFCONFIG}" = "file" ] ; then
		cp ${SRCDIR}/defconfig ${S}/.config
		yes '' | oe_runmake oldconfig
	elif [ -n "${DEFCONFIG}" ] ; then
		oe_runmake ${DEFCONFIG}
        elif [ -e "${HOST_SYSROOT}/barebox_defconfig" ] ; then
		cp ${HOST_SYSROOT}/barebox_defconfig ${S}/.config
		yes '' | oe_runmake oldconfig
	else
		die "No default configuration available"
	fi
}

do_compile () {
	oe_runmake all
}

# Support checking the image size
CLASS_FLAGS += "barebox_maxsize"
inherit sizecheck
BAREBOX_SIZECHECK = ""
BAREBOX_SIZECHECK:USE_barebox_maxsize = "${BAREBOX_IMAGE}:${USE_barebox_maxsize}"
SIZECHECK += "${BAREBOX_SIZECHECK}"

do_install () {
	install -d ${D}${bootdir}
	install -m 0644 ${BAREBOX_IMAGE} ${D}${bootdir}
	install -m 0755 ${BAREBOX_IMAGE_BASE} ${D}${bootdir}
}

INHIBIT_PACKAGE_STRIP = "1"

PACKAGES = "${PN} ${PN}-elf"
FILES_${PN} = "${bootdir}/${BAREBOX_IMAGE_FILENAME}"
FILES_${PN}-elf = "${bootdir}/${BAREBOX_IMAGE_BASE}"

PROVIDES_${PN} = "barebox"
PROVIDES_${PN}-elf = "barebox-elf"

addtask deploy before build after compile
do_deploy[dirs] = "${IMAGE_DEPLOY_DIR} ${S}"
REBUILD ?= "1"

do_deploy () {
	install -m 0644 ${BAREBOX_IMAGE} \
		${IMAGE_DEPLOY_DIR}/${BAREBOX_IMAGE_DEPLOY_FILE}
	cd ${IMAGE_DEPLOY_DIR}
	if [ -n "${BAREBOX_IMAGE_DEPLOY_LINK}" ] ; then
		rm -f  ${BAREBOX_IMAGE_DEPLOY_LINK}
		ln -sf ${BAREBOX_IMAGE_DEPLOY_FILE} \
			${BAREBOX_IMAGE_DEPLOY_LINK}
	fi
}

# Local Variables:
# mode: python
# End:
