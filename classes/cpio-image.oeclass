## Usefull class when building a cpio image.
##
## This class may be used in e.g. an initramfs for creating a cpio initramfs.
## By setting ramdisk_image_compression, one may determine the compression
## of the initramfs.
##
## @useflag ramdisk_image Use ramdisk. Default is false.
## @useflag ramdisk_image_name Set the resulting image name.
## @useflag ramdisk_image_compression Set the compression for the ramdisk image.

IMAGE_BASENAME ?= "${PN}-${TARGET_MACHINE_ID}"
inherit image image_mdev image_inetd image_crontab image_makedevs image_inittab image_fstab

CLASS_FLAGS += "ramdisk_image \
    ramdisk_image_name ramdisk_image_compression"
DEFAULT_USE_ramdisk_image = "0"
DEFAULT_USE_ramdisk_image_name = "${IMAGE_BASENAME}"
DEFAULT_USE_ramdisk_image_compression = "none"

IMAGE_CREATE_FUNCS += "cpio_image"

inherit kernel-arch
IMAGE_CREATE_FUNCS:>USE_ramdisk_image = " cpio_mkimage"
CLASS_DEPENDS:>USE_ramdisk_image = " native:u-boot-tools-mkimage"

cpio_image () {
	(
        cd ${IMAGE_DIR}
        find . | cpio -o -H newc > ${B}/${IMAGE_BASENAME}.cpio
        cd -
	)
}

cpio_mkimage () {
	(
	case "${USE_ramdisk_image_compression}" in
		none) cp ${B}/${IMAGE_BASENAME}.cpio ${B}/image.bin
			;;
		bzip2) bzip2 ${B}/${IMAGE_BASENAME}.cpio -c > ${B}/image.bin
			;;
		gzip) gzip ${B}/${IMAGE_BASENAME}.cpio -c > ${B}/image.bin
			;;
		lzma) lzma ${B}/${IMAGE_BASENAME}.cpio -c > ${B}/image.bin
			;;
		lzo)  lzop ${B}/${IMAGE_BASENAME}.cpio -c > ${B}/image.bin
			;;
		*) echo "ERROR: mkimage compression ${USE_ramdisk_image_compression} not supported"
			;;
	esac

	mkimage -A ${UBOOT_ARCH} -O linux -T ramdisk \
		-C none \
		-a 0x0 -e 0x0 \
		-n ${USE_ramdisk_image_name} \
		-d ${B}/image.bin ${B}/${IMAGE_BASENAME}.img
	)
}

EXT = ".cpio"
EXT:>USE_ramdisk_image = " .img"

do_install[postfuncs] += "do_install_cpio_image"
do_install_cpio_image () {
	for ext in $EXT; do
		install -m 664 ${B}/${IMAGE_BASENAME}$ext ${D}/
	done
}

FILES_${PN} += "/*.cpio /*.img"

do_deploy[postfuncs] += "do_deploy_cpio_image"
do_deploy_cpio_image () {
	for ext in $EXT; do
		install -m 664 ${B}/${IMAGE_BASENAME}$ext \
			${IMAGE_DEPLOY_DIR}/${IMAGE_FULLNAME}$ext
		ln -sf ${IMAGE_FULLNAME}$ext \
			${IMAGE_DEPLOY_DIR}/${IMAGE_BASENAME}$ext
	done
}

# Local Variables:
# mode: python
# End:
