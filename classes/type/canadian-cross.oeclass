# -*- mode:python; -*-

HOST_TYPE		= "sdk"
TARGET_TYPE		= "machine"
HOST_CROSS		= "sdk-cross"
TARGET_CROSS		= "cross"

RECIPE_ARCH		 = "${SDK_ARCH}--${MACHINE_ARCH}"

PACKAGES		+= "${HOST_PACKAGES} ${TARGET_PACKAGES}"
HOST_PACKAGES		?= ""
TARGET_PACKAGES		?= ""

# Set host=sdk for architecture triplet build/sdk/machine
HOST_ARCH		= "${SDK_ARCH}"

require conf/paths/sdk.conf
require conf/paths/sdk-host.conf
require conf/paths/machine.conf
require conf/paths/machine-target.conf

# Fixup PACKAGE_TYPE_* variables for target packages
addhook fixup_package_type to post_recipe_parse first
def fixup_package_type(d):
    host_packages = (d.get("HOST_PACKAGES") or "").split()
    target_packages = (d.get("TARGET_PACKAGES") or "").split()
    for pkg in host_packages:
        d.set("PACKAGE_TYPE_%s"%(pkg), "sdk")
    for pkg in target_packages:
        d.set("PACKAGE_TYPE_%s"%(pkg), "machine")

STAGE_PATH = "\
${STAGE_DIR}/cross${stage_bindir}:\
${STAGE_DIR}/sdk-cross${stage_bindir}:\
${STAGE_DIR}/native${stage_bindir}\
"

LD_LIBRARY_PATH = "\
${STAGE_DIR}/cross${stage_libdir}:\
${STAGE_DIR}/sdk-cross${stage_libdir}:\
${STAGE_DIR}/native${stage_libdir}\
"

export CROSS	= "${HOST_PREFIX}"
