## Class for packages having binconfig files.
##
## Rewrites the paths in the binconfig files so that it contains valid dirs.

require conf/meta.conf

BINCONFIG_FILES ?= "${bindir}/*-config"
BINCONFIG_GLOB ?= "${BINCONFIG_FILES}"
FILES_${PN}-dev += "${BINCONFIG_FILES}"
BINCONFIG_FIXUP_STRIP_DIRS ?= "${HOST_SYSROOT} ${TARGET_SYSROOT} ${D} ${B} ${S}"

do_install[postfuncs] += "do_install_binconfig_fixup"
do_install_binconfig_fixup[dirs] = "${D}"

def do_install_binconfig_fixup(d):
    binconfig_files = []
    for pattern in d.get("BINCONFIG_GLOB").split():
        binconfig_files += glob.glob(pattern.lstrip("/"))
    strip_dirs = set()
    for strip_dir in d.get("BINCONFIG_FIXUP_STRIP_DIRS").split():
        strip_dirs.add(strip_dir)
        strip_dirs.add(os.path.realpath(strip_dir))
    for filename in binconfig_files:
        print "binconfig fixup of /%s"%(filename)
        with open(filename, "r") as input_file:
            binconfig_file = input_file.read()
        for strip_dir in strip_dirs:
            binconfig_file = re.sub(r"--sysroot=%s(/\S+)"%(strip_dir),
                                    r"--sysroot=\g<1>", binconfig_file)
            binconfig_file = re.sub(r"--sysroot=%s\s*"%(strip_dir),
                                    r"", binconfig_file)
            binconfig_file = re.sub(r"-isystem %s"%(strip_dir),
                                    r"-isystem ", binconfig_file)
            binconfig_file = re.sub(r"-I%s"%(strip_dir),
                                    r"-I", binconfig_file)
            binconfig_file = re.sub(r"-iquote%s"%(strip_dir),
                                    r"-iquote", binconfig_file)
            binconfig_file = re.sub(r"-L%s"%(strip_dir),
                                    r"-L", binconfig_file)
            binconfig_file = re.sub(r"=%s"%(strip_dir),
                                    r"=", binconfig_file)
        with open(filename, "w") as output_file:
            output_file.write(binconfig_file)

do_split[postfuncs] += "do_split_binconfig_fixup"
def do_split_binconfig_fixup(d):
    pkgd = d.get("PKGD")
    pkgmetadir = d.get("pkgmetadir").lstrip("/")
    binconfig_globs = d.get("BINCONFIG_GLOB").lstrip("/").split()
    os.chdir(pkgd)
    for pkg in os.listdir("."):
        os.chdir(os.path.join(pkgd, pkg))
        binconfig_files = []
        for binconfig_glob in binconfig_globs:
            for binconfig_file in glob.glob(binconfig_glob.lstrip("/")):
                binconfig_files.append("/" + binconfig_file)
        if not binconfig_files:
            continue
        print "binconfig files in package", pkg
        oelite.util.makedirs(pkgmetadir)
        metafile_path = os.path.join(pkgmetadir, "binconfig")
        with open(metafile_path, "w") as metafile:
            metafile.write("\n".join(binconfig_files) + "\n")

# Local Variables:
# mode: python
# End:
